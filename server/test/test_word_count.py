from typing import Dict, Generator, List

from app.words_utils import (
    filter_words,
    get_words,
    merge_word_counts,
    proccess_articles,
)

example = {
    "status": "ok",
    "totalResults": 6477,
    "articles": [
        {
            "source": {"id": "bbc-news", "name": "BBC News"},
            "author": None,
            "title": "Everton 2-2 Liverpool: Dominic Calvert-Lewin heads Toffees level",
            "description": "Everton twice come from behind to draw with Liverpool and maintain their three-point lead at the top of the Premier League.",
            "url": "https://www.bbc.co.uk/sport/football/54489179",
            "urlToImage": "https://ichef.bbci.co.uk/live-experience/cps/624/cpsprodpb/11F7A/production/_114949537_whatsubject.jpg",
            "publishedAt": "2020-10-17T13:33:43Z",
            "content": "Dominic Calvert-Lewin has become just the fourth player in Premier League history to score in each of the opening five matchdays of a season\r\nEverton twice came from behind to draw a dramatic Merseys… [+3614 chars]",
        },
        {
            "source": {"id": "bbc-news", "name": "BBC News"},
            "author": None,
            "title": "Celtic 0-2 Rangers: visitors make title statement with dominant win",
            "description": "Rangers inflicted the first Old Firm derby blow in a historic Scottish Premiership campaign - and moved four points clear at the top - with a dominant 2-0 win at Celtic Park.",
            "url": "https://www.bbc.co.uk/sport/football/54489133",
            "urlToImage": "https://ichef.bbci.co.uk/live-experience/cps/624/cpsprodpb/5842/production/_114949522_19987624.jpg",
            "publishedAt": "2020-10-17T13:22:17Z",
            "content": "Connor Goldson side-footed home his second to secure victory for Rangers\r\nRangers inflicted the first Old Firm derby blow in a historic Scottish Premiership campaign - and moved four points clear at … [+6748 chars]",
        },
        {
            "source": {"id": "bbc-news", "name": "BBC News"},
            "author": "https://www.facebook.com/bbcnews",
            "title": "Covid in Scotland: Deaths from virus increase by 15",
            "description": "The Scottish government confirmed 1,167 more people had tested positive within the same 24-hour period.",
            "url": "https://www.bbc.co.uk/news/uk-scotland-54583356",
            "urlToImage": "https://ichef.bbci.co.uk/news/1024/branded_news/E28A/production/_114949975_hi063850629.jpg",
            "publishedAt": "2020-10-17T13:13:12Z",
            "content": "The Scottish government confirmed 1,167 more people had tested positive within the same 24-hour period.",
        },
        {
            "source": {"id": "bbc-news", "name": "BBC News"},
            "author": None,
            "title": "Doyle lands first Group One victory with Glen Shiel",
            "description": "Hollie Doyle wins her first Group One race as Glen Shiel takes the British Champions Sprint Stakes at Ascot.",
            "url": "https://www.bbc.co.uk/sport/horse-racing/54584413",
            "urlToImage": "https://ichef.bbci.co.uk/live-experience/cps/624/cpsprodpb/13590/production/_97584297_breaking_news.png",
            "publishedAt": "2020-10-17T13:07:14Z",
            "content": "Jockey Hollie Doyle won her first Group One race as Glen Shiel claimed the British Champions Sprint Stakes at Ascot in a photo finish.\r\nThe victory on the 16-1 shot on Champions Day saw the 24-year-o… [+353 chars]",
        },
        {
            "source": {"id": "bbc-news", "name": "BBC News"},
            "author": None,
            "title": "2020/10/17 13:00 GMT",
            "description": "The latest five minute news bulletin from BBC World Service.",
            "url": "https://www.bbc.co.uk/programmes/w172x5p1kfj1v8s",
            "urlToImage": "https://ichef.bbci.co.uk/images/ic/1200x675/p060dh18.jpg",
            "publishedAt": "2020-10-17T13:06:00Z",
            "content": "The latest five minute news bulletin from BBC World Service.",
        },
    ],
}


expected_test_get_article_words = [
    "Everton",
    "Liverpool",
    "Dominic",
    "CalvertLewin",
    "heads",
    "Toffees",
    "level",
    "Everton",
    "twice",
    "come",
    "from",
    "behind",
    "draw",
    "with",
    "Liverpool",
    "and",
    "maintain",
    "their",
    "threepoint",
    "lead",
    "the",
    "top",
    "the",
    "Premier",
    "League",
]


expected_test_word_count = {
    "the": 6,
    "with": 4,
    "first": 3,
    "from": 3,
    "Celtic": 2,
    "Rangers": 2,
    "dominant": 2,
    "win": 2,
    "Scottish": 2,
    "and": 2,
    "top": 2,
    "Everton": 2,
    "Liverpool": 2,
    "The": 2,
    "Doyle": 2,
    "Group": 2,
    "One": 2,
    "Glen": 2,
    "Shiel": 2,
    "visitors": 1,
    "make": 1,
    "title": 1,
    "statement": 1,
    "inflicted": 1,
    "Old": 1,
    "Firm": 1,
    "derby": 1,
    "blow": 1,
    "historic": 1,
    "Premiership": 1,
    "campaign": 1,
    "moved": 1,
    "four": 1,
    "points": 1,
    "clear": 1,
    "Park": 1,
    "Dominic": 1,
    "CalvertLewin": 1,
    "heads": 1,
    "Toffees": 1,
    "level": 1,
    "twice": 1,
    "come": 1,
    "behind": 1,
    "draw": 1,
    "maintain": 1,
    "their": 1,
    "threepoint": 1,
    "lead": 1,
    "Premier": 1,
    "League": 1,
    "Covid": 1,
    "Scotland": 1,
    "Deaths": 1,
    "virus": 1,
    "increase": 1,
    "government": 1,
    "confirmed": 1,
    "more": 1,
    "people": 1,
    "had": 1,
    "tested": 1,
    "positive": 1,
    "within": 1,
    "same": 1,
    "hour": 1,
    "period": 1,
    "lands": 1,
    "victory": 1,
    "Hollie": 1,
    "wins": 1,
    "her": 1,
    "race": 1,
    "takes": 1,
    "British": 1,
    "Champions": 1,
    "Sprint": 1,
    "Stakes": 1,
    "Ascot": 1,
    "GMT": 1,
    "latest": 1,
    "five": 1,
    "minute": 1,
    "news": 1,
    "bulletin": 1,
    "BBC": 1,
    "World": 1,
    "Service": 1,
}


def test_get_article_words():
    result = list(filter_words(get_words(example["articles"][0])))
    assert result == expected_test_get_article_words


def test_merging():
    result = merge_word_counts({"x": 1, "y": 2, "z": 4}, {"x": 3, "p": 10})
    assert result == {"x": 4, "y": 2, "z": 4, "p": 10}


def test_word_count():
    sorted_result = proccess_articles(example)
    assert expected_test_word_count == sorted_result
